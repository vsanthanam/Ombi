//
//  File.swift
//  
//
//  Created by Varun Santhanam on 5/8/21.
//

import Foundation

public protocol RequestResponseProtocol {}
public protocol RequestErrorProtocol: LocalizedError, CustomStringConvertible {}

/// A network response generated by a `Requestable`
public struct RequestResponse<Body>: RequestResponseProtocol {
    
    /// Create a `RequestResponse`
    /// - Parameters:
    ///   - url: The URL that generated the response
    ///   - headers: The response headers
    ///   - statusCode: The response status code
    ///   - body: The response body
    public init(url: URL?,
                headers: RequestHeaders?,
                statusCode: Int?,
                body: Body?) {
        self.url = url
        self.headers = headers
        self.statusCode = statusCode
        self.body = body
    }
    
    // MARK: - API
    
    public static var empty: Self { .init(url: nil, headers: nil, statusCode: nil, body: nil) }
    
    public typealias Validation<T> = Result<Self, T> where T: Error
    
    /// The URL that generated the response
    public var url: URL?
    
    /// The response headers
    public var headers: RequestHeaders?
    
    /// The response status code
    public var statusCode: Int?
    
    /// The response
    public var body: Body?
    
    // MARK: - Subscripting
    
    subscript(header: RequestHeaders.Key) -> RequestHeaders.Value? {
        get {
            headers?[header]
        }
        set {
            if headers == nil {
                headers = [:]
            }
            headers?[header] = newValue
        }
    }
}
